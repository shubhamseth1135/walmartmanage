@model WalmartManagementApplication.Models.membership

@{
    Layout = "~/Views/Shared/_employeelayout.cshtml";

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm("Edit", "memberships", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>membership</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.memberid)
            <div class="form-group">
                @Html.LabelFor(model => model.storeid, "Store ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <text>@Model.storeid</text>
                    @Html.HiddenFor(model=>model.storeid)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.merchantname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.merchantname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.merchantname, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.emailid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.emailid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emailid, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.mobileno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.mobileno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mobileno, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model=>model.identifyproof , htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img height="80" src="@Url.Content(Model.identifyproof)" />
                    <div>
                        <input type="file" id="identifyproof" name="identifyproof" accept="image/*" />
                        @Html.Hidden("identifyproof", Model.identifyproof)
                    </div>
                </div>
            </div><div class="form-group">
                @Html.LabelFor(model => model.vatno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.vatno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.vatno, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.servicetaxno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.servicetaxno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.servicetaxno, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.HiddenFor(model=>model.dateofexpiry)
                </div>
               @*@Html.LabelFor(model => model.dateofexpiry, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.dateofexpiry, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dateofexpiry, "", new { @class = "text-danger" })
                </div>
            </div>*@
    
            <div class="form-group">
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.status, new List<SelectListItem>
            {
                new SelectListItem() {Text="active",Value="active"},
                new SelectListItem() {Text="inactive",Value="inactive"}
            }, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>
    
            @*<div class="form-group">
                @Html.LabelFor(model => model.storeid, "storeid", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("storeid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.storeid, "", new { @class = "text-danger" })
                </div>
            </div>*@
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        
    </div>
</body>
</html>
